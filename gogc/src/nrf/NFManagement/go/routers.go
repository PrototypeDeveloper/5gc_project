/*
 * NRF NFManagement Service
 *
 * NRF NFManagement Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.3.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	return NewRouterWithGinEngine(gin.Default(), handleFunctions)
}

// NewRouter add routes to existing gin engine.
func NewRouterWithGinEngine(router *gin.Engine, handleFunctions ApiHandleFunctions) *gin.Engine {
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the NFInstanceIDDocumentAPI part of the API
	NFInstanceIDDocumentAPI NFInstanceIDDocumentAPI
	// Routes for the NFInstancesStoreAPI part of the API
	NFInstancesStoreAPI NFInstancesStoreAPI
	// Routes for the SharedDataDocumentAPI part of the API
	SharedDataDocumentAPI SharedDataDocumentAPI
	// Routes for the SharedDataStoreAPI part of the API
	SharedDataStoreAPI SharedDataStoreAPI
	// Routes for the SubscriptionIDDocumentAPI part of the API
	SubscriptionIDDocumentAPI SubscriptionIDDocumentAPI
	// Routes for the SubscriptionsCollectionAPI part of the API
	SubscriptionsCollectionAPI SubscriptionsCollectionAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"DeregisterNFInstance",
			http.MethodDelete,
			"/nnrf-nfm/v1/nf-instances/:nfInstanceID",
			handleFunctions.NFInstanceIDDocumentAPI.DeregisterNFInstance,
		},
		{
			"GetNFInstance",
			http.MethodGet,
			"/nnrf-nfm/v1/nf-instances/:nfInstanceID",
			handleFunctions.NFInstanceIDDocumentAPI.GetNFInstance,
		},
		{
			"RegisterNFInstance",
			http.MethodPut,
			"/nnrf-nfm/v1/nf-instances/:nfInstanceID",
			handleFunctions.NFInstanceIDDocumentAPI.RegisterNFInstance,
		},
		{
			"UpdateNFInstance",
			http.MethodPatch,
			"/nnrf-nfm/v1/nf-instances/:nfInstanceID",
			handleFunctions.NFInstanceIDDocumentAPI.UpdateNFInstance,
		},
		{
			"GetNFInstances",
			http.MethodGet,
			"/nnrf-nfm/v1/nf-instances",
			handleFunctions.NFInstancesStoreAPI.GetNFInstances,
		},
		{
			"OptionsNFInstances",
			http.MethodOptions,
			"/nnrf-nfm/v1/nf-instances",
			handleFunctions.NFInstancesStoreAPI.OptionsNFInstances,
		},
		{
			"DeleteSharedData",
			http.MethodDelete,
			"/nnrf-nfm/v1/shared-data/:sharedDataId",
			handleFunctions.SharedDataDocumentAPI.DeleteSharedData,
		},
		{
			"GetSharedData",
			http.MethodGet,
			"/nnrf-nfm/v1/shared-data/:sharedDataId",
			handleFunctions.SharedDataDocumentAPI.GetSharedData,
		},
		{
			"RegisterSharedData",
			http.MethodPut,
			"/nnrf-nfm/v1/shared-data/:sharedDataId",
			handleFunctions.SharedDataDocumentAPI.RegisterSharedData,
		},
		{
			"UpdateSharedData",
			http.MethodPatch,
			"/nnrf-nfm/v1/shared-data/:sharedDataId",
			handleFunctions.SharedDataDocumentAPI.UpdateSharedData,
		},
		{
			"GetSharedDataCollection",
			http.MethodGet,
			"/nnrf-nfm/v1/shared-data",
			handleFunctions.SharedDataStoreAPI.GetSharedDataCollection,
		},
		{
			"RemoveSubscription",
			http.MethodDelete,
			"/nnrf-nfm/v1/subscriptions/:subscriptionID",
			handleFunctions.SubscriptionIDDocumentAPI.RemoveSubscription,
		},
		{
			"UpdateSubscription",
			http.MethodPatch,
			"/nnrf-nfm/v1/subscriptions/:subscriptionID",
			handleFunctions.SubscriptionIDDocumentAPI.UpdateSubscription,
		},
		{
			"CreateSubscription",
			http.MethodPost,
			"/nnrf-nfm/v1/subscriptions",
			handleFunctions.SubscriptionsCollectionAPI.CreateSubscription,
		},
	}
}
